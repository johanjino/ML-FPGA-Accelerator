#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2009.vpi";
S_0x7fffeec38860 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x7fffeec389f0 .scope module, "matrix_multiplier" "matrix_multiplier" 3 13;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clk_i";
    .port_info 1 /INPUT 1 "reset_i";
    .port_info 2 /INPUT 1 "valid_i";
    .port_info 3 /OUTPUT 1 "valid_o";
    .port_info 4 /INPUT 128 "a_i";
    .port_info 5 /INPUT 128 "b_i";
    .port_info 6 /OUTPUT 260 "c_o";
P_0x7fffeec38b80 .param/l "A_COLUMNS_B_ROWS" 0 3 17, +C4<00000000000000000000000000000010>;
P_0x7fffeec38bc0 .param/l "A_ROWS" 0 3 15, +C4<00000000000000000000000000000010>;
P_0x7fffeec38c00 .param/l "B_COLUMNS" 0 3 16, +C4<00000000000000000000000000000010>;
P_0x7fffeec38c40 .param/l "C_DATA_WIDTH" 0 3 18, +C4<00000000000000000000000001000001>;
P_0x7fffeec38c80 .param/l "DATA_WIDTH" 0 3 14, +C4<00000000000000000000000000100000>;
o0x7f6b45d80168 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61da0 .array "a_i", 0 3;
v0x7fffeec61da0_0 .net v0x7fffeec61da0 0, 31 0, o0x7f6b45d80168; 0 drivers
o0x7f6b45d80198 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61da0_1 .net v0x7fffeec61da0 1, 31 0, o0x7f6b45d80198; 0 drivers
o0x7f6b45d801c8 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61da0_2 .net v0x7fffeec61da0 2, 31 0, o0x7f6b45d801c8; 0 drivers
o0x7f6b45d801f8 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61da0_3 .net v0x7fffeec61da0 3, 31 0, o0x7f6b45d801f8; 0 drivers
o0x7f6b45d80228 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61f30 .array "b_i", 0 3;
v0x7fffeec61f30_0 .net v0x7fffeec61f30 0, 31 0, o0x7f6b45d80228; 0 drivers
o0x7f6b45d80258 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61f30_1 .net v0x7fffeec61f30 1, 31 0, o0x7f6b45d80258; 0 drivers
o0x7f6b45d80288 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61f30_2 .net v0x7fffeec61f30 2, 31 0, o0x7f6b45d80288; 0 drivers
o0x7f6b45d802b8 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0x7fffeec61f30_3 .net v0x7fffeec61f30 3, 31 0, o0x7f6b45d802b8; 0 drivers
v0x7fffeec620a0 .array "c_calc", 0 3, 64 0;
v0x7fffeec62170 .array "c_o", 0 3, 64 0;
o0x7f6b45d802e8 .functor BUFZ 1, C4<z>; HiZ drive
v0x7fffeec62230_0 .net "clk_i", 0 0, o0x7f6b45d802e8;  0 drivers
o0x7f6b45d80318 .functor BUFZ 1, C4<z>; HiZ drive
v0x7fffeec62340_0 .net "reset_i", 0 0, o0x7f6b45d80318;  0 drivers
o0x7f6b45d80348 .functor BUFZ 1, C4<z>; HiZ drive
v0x7fffeec62400_0 .net "valid_i", 0 0, o0x7f6b45d80348;  0 drivers
v0x7fffeec624c0_0 .var "valid_o", 0 0;
E_0x7fffeec3a600 .event posedge, v0x7fffeec62230_0;
E_0x7fffeec3a850/0 .event edge, v0x7fffeec614d0_0, v0x7fffeec61da0_0, v0x7fffeec61da0_1, v0x7fffeec61da0_2;
E_0x7fffeec3a850/1 .event edge, v0x7fffeec61da0_3, v0x7fffeec61f30_0, v0x7fffeec61f30_1, v0x7fffeec61f30_2;
E_0x7fffeec3a850/2 .event edge, v0x7fffeec61f30_3;
E_0x7fffeec3a850 .event/or E_0x7fffeec3a850/0, E_0x7fffeec3a850/1, E_0x7fffeec3a850/2;
S_0x7fffeec30a40 .scope begin, "$unm_blk_5" "$unm_blk_5" 3 62, 3 62 0, S_0x7fffeec389f0;
 .timescale -9 -12;
v0x7fffeec30bd0_0 .var/i "idx", 31 0;
S_0x7fffeec603f0 .scope begin, "multiply" "multiply" 3 31, 3 31 0, S_0x7fffeec389f0;
 .timescale -9 -12;
v0x7fffeec614d0_0 .var "c_element", 64 0;
S_0x7fffeec605f0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 33, 3 33 0, S_0x7fffeec603f0;
 .timescale -9 -12;
v0x7fffeec613d0_0 .var/2s "i", 31 0;
S_0x7fffeec607d0 .scope begin, "C_ROWS" "C_ROWS" 3 33, 3 33 0, S_0x7fffeec605f0;
 .timescale -9 -12;
S_0x7fffeec609d0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 34, 3 34 0, S_0x7fffeec607d0;
 .timescale -9 -12;
v0x7fffeec612d0_0 .var/2s "j", 31 0;
S_0x7fffeec60bd0 .scope begin, "C_COLUMNS" "C_COLUMNS" 3 34, 3 34 0, S_0x7fffeec609d0;
 .timescale -9 -12;
S_0x7fffeec60dd0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 36, 3 36 0, S_0x7fffeec60bd0;
 .timescale -9 -12;
v0x7fffeec611d0_0 .var/2s "k", 31 0;
S_0x7fffeec60fd0 .scope begin, "DOT_PRODUCT" "DOT_PRODUCT" 3 36, 3 36 0, S_0x7fffeec60dd0;
 .timescale -9 -12;
S_0x7fffeec615d0 .scope begin, "proc_reg" "proc_reg" 3 44, 3 44 0, S_0x7fffeec389f0;
 .timescale -9 -12;
S_0x7fffeec617e0 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 48, 3 48 0, S_0x7fffeec615d0;
 .timescale -9 -12;
v0x7fffeec619c0_0 .var/2s "idx", 31 0;
S_0x7fffeec61ac0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 3 54, 3 54 0, S_0x7fffeec615d0;
 .timescale -9 -12;
v0x7fffeec61cc0_0 .var/2s "idx", 31 0;
    .scope S_0x7fffeec389f0;
T_0 ;
    %wait E_0x7fffeec3a850;
    %fork t_1, S_0x7fffeec603f0;
    %jmp t_0;
    .scope S_0x7fffeec603f0;
t_1 ;
    %fork t_3, S_0x7fffeec605f0;
    %jmp t_2;
    .scope S_0x7fffeec605f0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec613d0_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x7fffeec613d0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.1, 5;
    %fork t_5, S_0x7fffeec607d0;
    %jmp t_4;
    .scope S_0x7fffeec607d0;
t_5 ;
    %fork t_7, S_0x7fffeec609d0;
    %jmp t_6;
    .scope S_0x7fffeec609d0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec612d0_0, 0, 32;
T_0.2 ;
    %load/vec4 v0x7fffeec612d0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.3, 5;
    %fork t_9, S_0x7fffeec60bd0;
    %jmp t_8;
    .scope S_0x7fffeec60bd0;
t_9 ;
    %pushi/vec4 0, 0, 65;
    %store/vec4 v0x7fffeec614d0_0, 0, 65;
    %fork t_11, S_0x7fffeec60dd0;
    %jmp t_10;
    .scope S_0x7fffeec60dd0;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec611d0_0, 0, 32;
T_0.4 ;
    %load/vec4 v0x7fffeec611d0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_0.5, 5;
    %fork t_13, S_0x7fffeec60fd0;
    %jmp t_12;
    .scope S_0x7fffeec60fd0;
t_13 ;
    %load/vec4 v0x7fffeec614d0_0;
    %load/vec4 v0x7fffeec613d0_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %load/vec4 v0x7fffeec611d0_0;
    %pad/s 65;
    %add;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffeec61da0, 4;
    %pad/u 65;
    %load/vec4 v0x7fffeec611d0_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %load/vec4 v0x7fffeec612d0_0;
    %pad/s 65;
    %add;
    %ix/vec4/s 4;
    %load/vec4a v0x7fffeec61f30, 4;
    %pad/u 65;
    %mul;
    %add;
    %store/vec4 v0x7fffeec614d0_0, 0, 65;
    %end;
    .scope S_0x7fffeec60dd0;
t_12 %join;
    %load/vec4 v0x7fffeec611d0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v0x7fffeec611d0_0, 0, 32;
    %jmp T_0.4;
T_0.5 ;
    %end;
    .scope S_0x7fffeec60bd0;
t_10 %join;
    %load/vec4 v0x7fffeec614d0_0;
    %load/vec4 v0x7fffeec613d0_0;
    %pad/s 65;
    %muli 2, 0, 65;
    %load/vec4 v0x7fffeec612d0_0;
    %pad/s 65;
    %add;
    %ix/vec4/s 4;
    %store/vec4a v0x7fffeec620a0, 4, 0;
    %end;
    .scope S_0x7fffeec609d0;
t_8 %join;
    %load/vec4 v0x7fffeec612d0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v0x7fffeec612d0_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %end;
    .scope S_0x7fffeec607d0;
t_6 %join;
    %end;
    .scope S_0x7fffeec605f0;
t_4 %join;
    %load/vec4 v0x7fffeec613d0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v0x7fffeec613d0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_0x7fffeec603f0;
t_2 %join;
    %end;
    .scope S_0x7fffeec389f0;
t_0 %join;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x7fffeec389f0;
T_1 ;
    %wait E_0x7fffeec3a600;
    %fork t_15, S_0x7fffeec615d0;
    %jmp t_14;
    .scope S_0x7fffeec615d0;
t_15 ;
    %load/vec4 v0x7fffeec62340_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x7fffeec624c0_0, 0;
    %fork t_17, S_0x7fffeec617e0;
    %jmp t_16;
    .scope S_0x7fffeec617e0;
t_17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec619c0_0, 0, 32;
T_1.2 ;
    %load/vec4 v0x7fffeec619c0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_1.3, 5;
    %pushi/vec4 0, 0, 65;
    %ix/getv/s 3, v0x7fffeec619c0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x7fffeec62170, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x7fffeec619c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x7fffeec619c0_0, 0, 32;
    %jmp T_1.2;
T_1.3 ;
    %end;
    .scope S_0x7fffeec615d0;
t_16 %join;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0x7fffeec62400_0;
    %assign/vec4 v0x7fffeec624c0_0, 0;
    %fork t_19, S_0x7fffeec61ac0;
    %jmp t_18;
    .scope S_0x7fffeec61ac0;
t_19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec61cc0_0, 0, 32;
T_1.4 ;
    %load/vec4 v0x7fffeec61cc0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_1.5, 5;
    %ix/getv/s 4, v0x7fffeec61cc0_0;
    %load/vec4a v0x7fffeec620a0, 4;
    %ix/getv/s 3, v0x7fffeec61cc0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x7fffeec62170, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x7fffeec61cc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x7fffeec61cc0_0, 0, 32;
    %jmp T_1.4;
T_1.5 ;
    %end;
    .scope S_0x7fffeec615d0;
t_18 %join;
T_1.1 ;
    %end;
    .scope S_0x7fffeec389f0;
t_14 %join;
    %jmp T_1;
    .thread T_1;
    .scope S_0x7fffeec389f0;
T_2 ;
    %fork t_21, S_0x7fffeec30a40;
    %jmp t_20;
    .scope S_0x7fffeec30a40;
t_21 ;
    %vpi_call/w 3 64 "$dumpfile", "dump.vcd" {0 0 0};
    %vpi_call/w 3 65 "$dumpvars", 32'sb00000000000000000000000000000001, S_0x7fffeec389f0 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec30bd0_0, 0, 32;
T_2.0 ;
    %load/vec4 v0x7fffeec30bd0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_2.1, 5;
    %vpi_call/w 3 68 "$dumpvars", 32'sb00000000000000000000000000000001, &A<v0x7fffeec61da0, v0x7fffeec30bd0_0 > {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x7fffeec30bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x7fffeec30bd0_0, 0, 32;
    %jmp T_2.0;
T_2.1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec30bd0_0, 0, 32;
T_2.2 ;
    %load/vec4 v0x7fffeec30bd0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_2.3, 5;
    %vpi_call/w 3 71 "$dumpvars", 32'sb00000000000000000000000000000001, &A<v0x7fffeec61f30, v0x7fffeec30bd0_0 > {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x7fffeec30bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x7fffeec30bd0_0, 0, 32;
    %jmp T_2.2;
T_2.3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fffeec30bd0_0, 0, 32;
T_2.4 ;
    %load/vec4 v0x7fffeec30bd0_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_2.5, 5;
    %vpi_call/w 3 74 "$dumpvars", 32'sb00000000000000000000000000000001, &A<v0x7fffeec62170, v0x7fffeec30bd0_0 > {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x7fffeec30bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x7fffeec30bd0_0, 0, 32;
    %jmp T_2.4;
T_2.5 ;
    %end;
    .scope S_0x7fffeec389f0;
t_20 %join;
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "-";
    "/mnt/c/Johan/Skills/Personal Projects/ML-FPGA-Accelerator/src/Hardware/hdl/matrix_multiplier.sv";
